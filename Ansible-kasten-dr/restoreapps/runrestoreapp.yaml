- name: Get Last Restore Point for Namespace {{ nspace }}
  shell:
     "kubectl get restorepoints.apps.kio.kasten.io --namespace='{{ nspace }}' --selector=k10.kasten.io/exportType --sort-by=.status.actionTime | awk '{print $1}'  | cut -d/ -f2 | tail -n 1"
  register: apprespoint
  when: (nspace != "NAMESPACE" and nspace != "default" and nspace != "kasten-io")

- name: "create {{ nspace }} namespace for restored app"
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ nspace }}"
  when: (nspace != "NAMESPACE" and nspace != "default" and nspace != "kasten-io")

#Restore apps WITH Transforms        
- name: "restore app {{ nspace }}"
  kubernetes.core.k8s:
    state: present
    definition: 
        apiVersion: actions.kio.kasten.io/v1alpha1
        kind: RestoreAction
        metadata:
          generateName: restore-"{{ nspace }}"-
          namespace: "{{ nspace }}"
        spec:
          subject:
            kind: RestorePoint
            name: "{{ apprespoint.stdout }}"
            namespace: "{{ nspace }}"
          targetNamespace: "{{ nspace }}"
          transforms:
            - subject: {}
              json: null
              transformSetRef:
                name: dr-storageclass
                namespace: kasten-io
  when: (nspace != "NAMESPACE" and nspace != "default" and nspace != "kasten-io" and apprespoint.stdout and storageclass != "")
  
  #Restore apps WITHOUT Transforms        
- name: "restore app {{ nspace }}"
  kubernetes.core.k8s:
    state: present
    definition: 
        apiVersion: actions.kio.kasten.io/v1alpha1
        kind: RestoreAction
        metadata:
          generateName: restore-"{{ nspace }}"-
          namespace: "{{ nspace }}"
        spec:
          subject:
            kind: RestorePoint
            name: "{{ apprespoint.stdout }}"
            namespace: "{{ nspace }}"
          targetNamespace: "{{ nspace }}"
  when: (nspace != "NAMESPACE" and nspace != "default" and nspace != "kasten-io" and apprespoint.stdout and storageclass == "")